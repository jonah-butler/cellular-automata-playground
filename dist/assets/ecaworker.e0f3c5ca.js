var p=Object.defineProperty;var v=(n,h,c)=>h in n?p(n,h,{enumerable:!0,configurable:!0,writable:!0,value:c}):n[h]=c;var s=(n,h,c)=>(v(n,typeof h!="symbol"?h+"":h,c),c);(function(){"use strict";class n{constructor(t=1,e="#181818",i="#fff",l=1e3,r=1e3,o,_){s(this,"cell_size");s(this,"dead_color");s(this,"living_color");s(this,"cells_in_col");s(this,"cells_in_row");s(this,"steps");s(this,"walks");s(this,"active_array");s(this,"visited_steps");this.cell_size=t,this.dead_color=e,this.living_color=i,this.cells_in_col=l/this.cell_size,this.cells_in_row=r/this.cell_size,this.steps=o,this.walks=_,this.active_array=[],this.visited_steps=[]}_arrayInitialization(){for(let t=0;t<this.cells_in_row;t++){this.active_array[t]=[];for(let e=0;e<this.cells_in_col;e++)this.active_array[t][e]=0}}_randomHelper(t){return Math.floor(Math.random()*t)}_generatePoints(){const t=this._randomHelper(this.cells_in_row),e=this._randomHelper(this.cells_in_col);this._walk({x:t,y:e})}_walk(t){this.active_array[t.x][t.y]=1,this.visited_steps.push({x:t.x,y:t.y});let e=t.x,i=t.y;for(let l=0;l<this.walks;l++){for(let _=1;_<this.steps;_++){const u=this._neighbors(e,i),d=this._randomHelper(Object.keys(u).length);e=u[d].x,i=u[d].y,this._evaluateCoordinates(e,i)===void 0?(e=t.x,i=t.y):(this.active_array[e][i]=1,this.visited_steps.push({x:e,y:i}))}const r=this._randomHelper(this.visited_steps.length),o=this.visited_steps[r];e=o.x,i=o.y}}_evaluateCoordinates(t,e){let i;try{i=this.active_array[t][e]}catch{i=void 0}if(i===0||i===1)return i}_fillArray(t){for(let e=0;e<this.cells_in_row;e++)for(let i=0;i<this.cells_in_col;i++){const l=this.active_array[e][i]===1?this.living_color:this.dead_color;t.fillStyle=l,t.fillRect(i*this.cell_size,e*this.cell_size,this.cell_size,this.cell_size)}}_neighbors(t,e){return{0:{x:t-1,y:e-1},1:{x:t-1,y:e},2:{x:t-1,y:e+1},3:{x:t,y:e-1},4:{x:t,y:e+1},5:{x:t+1,y:e-1},6:{x:t+1,y:e},7:{x:t+1,y:e+1}}}init(t){this._arrayInitialization(),this._generatePoints(),this._fillArray(t)}}class h{constructor(t=2,e="#181818",i="#fff",l=1e3,r=1e3,o=200){s(this,"cell_size");s(this,"dead_color");s(this,"living_color");s(this,"cells_in_col");s(this,"cells_in_row");s(this,"active_array");s(this,"inactive_array");s(this,"interval");s(this,"lifeCycles");this.cell_size=t,this.dead_color=e,this.living_color=i,this.cells_in_col=l,this.cells_in_row=r,this.active_array=[],this.inactive_array=[],this.interval=0,this.lifeCycles=o}arrayInitialization(){for(let t=0;t<this.cells_in_row;t++){this.active_array[t]=[];for(let e=0;e<this.cells_in_col;e++)this.active_array[t][e]=0}for(let t=0;t<this.cells_in_row;t++){this.inactive_array[t]=[];for(let e=0;e<this.cells_in_col;e++)this.inactive_array[t][e]=0}}arrayRandomize(){for(let t=0;t<this.cells_in_row;t++)for(let e=0;e<this.cells_in_col;e++){const i=Math.random();this.active_array[t][e]=i<.5?0:1}}fillArray(t){for(let e=0;e<this.cells_in_row;e++)for(let i=0;i<this.cells_in_col;i++){const l=this.active_array[e][i]===1?this.living_color:this.dead_color;t.fillStyle=l,t.fillRect(i*this.cell_size,e*this.cell_size,this.cell_size,this.cell_size)}}updateLifeCycle(){for(let t=0;t<this.cells_in_row;t++)for(let e=0;e<this.cells_in_col;e++)this.inactive_array[t][e]=this.updateCellValue(t,e);this.active_array=this.inactive_array}updateCellValue(t,e){const i=this.countNeighbors(t,e);return i>4||i<3?0:i===3&&this.active_array[t][e]===0?1:this.active_array[t][e]}setCellValueHelper(t,e){try{return this.active_array[t][e]}catch{return 0}}countNeighbors(t,e){let i=0;return i+=this.setCellValueHelper(t-1,e-1),i+=this.setCellValueHelper(t-1,e),i+=this.setCellValueHelper(t-1,e+1),i+=this.setCellValueHelper(t,e-1),i+=this.setCellValueHelper(t,e+1),i+=this.setCellValueHelper(t+1,e-1),i+=this.setCellValueHelper(t+1,e),i+=this.setCellValueHelper(t+1,e+1),i}gameSetup(t,e){this.arrayInitialization(),this.arrayRandomize(),this.fillArray(t),this.init(t,e)}init(t,e){let i=0,l=1;i=setInterval(()=>{l===e?(console.log("i is equal to cycles",l,e),clearInterval(i)):(this.updateLifeCycle(),this.fillArray(t),l++)},2)}}class c{constructor(t=2,e="#181818",i="#fff",l=1e3,r=1e3,o=10){s(this,"cell_size");s(this,"dead_color");s(this,"living_color");s(this,"cells_in_col");s(this,"cells_in_row");s(this,"active_array");s(this,"inactive_array");s(this,"interval");s(this,"lifeCycles");this.cell_size=t,this.dead_color=e,this.living_color=i,this.cells_in_col=l,this.cells_in_row=r,this.active_array=[],this.inactive_array=[],this.interval=null,this.lifeCycles=o}arrayInitialization(){for(let t=0;t<this.cells_in_row;t++){this.active_array[t]=[];for(let e=0;e<this.cells_in_col;e++)this.active_array[t][e]=0}for(let t=0;t<this.cells_in_row;t++){this.inactive_array[t]=[];for(let e=0;e<this.cells_in_col;e++)this.inactive_array[t][e]=0}}arrayRandomize(){for(let t=0;t<this.cells_in_row;t++)for(let e=0;e<this.cells_in_col;e++){const i=Math.random()*Math.random()*Math.random()*12;this.active_array[t][e]=i<.5?0:1}}fillArray(t,e){for(let i=0;i<this.cells_in_row;i++)for(let l=0;l<this.cells_in_col;l++){let r;e?r=e[i][l]===1?this.living_color:this.dead_color:r=this.active_array[i][l]===1?this.living_color:this.dead_color,t.fillStyle=r,t.fillRect(l*this.cell_size,i*this.cell_size,this.cell_size,this.cell_size)}}updateLifeCycle(){for(let t=0;t<this.cells_in_row;t++)for(let e=0;e<this.cells_in_col;e++)this.inactive_array[t][e]=this.updateCellValue(t,e);this.active_array=this.inactive_array}updateCellValue(t,e){const i=this.countNeighbors(t,e);return i>4||i<3?0:i===3&&this.active_array[t][e]===0?1:this.active_array[t][e]}setCellValueHelper(t,e){try{return this.active_array[t][e]}catch{return 0}}countNeighbors(t,e){let i=0;return i+=this.setCellValueHelper(t-1,e-1),i+=this.setCellValueHelper(t-1,e),i+=this.setCellValueHelper(t-1,e+1),i+=this.setCellValueHelper(t,e-1),i+=this.setCellValueHelper(t,e+1),i+=this.setCellValueHelper(t+1,e-1),i+=this.setCellValueHelper(t+1,e),i+=this.setCellValueHelper(t+1,e+1),i}mooresNeighborhood(t){let e=[];for(let i=0;i<this.cells_in_row;i++){let l=[];for(let r=0;r<this.cells_in_col;r++)l.push(this.updateMooresNeighborhood(i,r));e.push(l)}this.active_array=e,this.fillArray(t)}setMooreValueHelper(t,e){let i;try{i=this.active_array[t][e]}catch{i=0}return i===void 0&&(i=0),i}countMooresNeighbors(t,e){let i=0;return i+=this.setMooreValueHelper(t-1,e-1),i+=this.setMooreValueHelper(t-1,e),i+=this.setMooreValueHelper(t-1,e+1),i+=this.setMooreValueHelper(t,e-1),i+=this.setMooreValueHelper(t,e+1),i+=this.setMooreValueHelper(t+1,e-1),i+=this.setMooreValueHelper(t+1,e),i+=this.setMooreValueHelper(t+1,e+1),i}updateMooresNeighborhood(t,e){return this.countMooresNeighbors(t,e)>4?1:0}gameSetup(t){this.arrayInitialization(),this.arrayRandomize(),this.fillArray(t)}runGame(t,e=5){let i=1;this.interval=setInterval(()=>{i===e&&clearInterval(this.interval),i++,this.mooresNeighborhood(t)},10)}}class f{constructor(t=90,e=700,i=500,l=!1,r="#fff",o="#000",_=1){s(this,"cell_size");s(this,"randomizeGen0");s(this,"one_color");s(this,"zero_color");s(this,"cells");s(this,"rule");s(this,"ruleset");s(this,"generations");s(this,"width");s(this,"ruleMap");this.cell_size=_,this.randomizeGen0=l,this.zero_color=r,this.one_color=o,this.cells=[],this.rule=t,this.generations=i,this.width=e,this.ruleset="",this.ruleMap={"000":null,"001":null,"010":null,"011":null,100:null,101:null,110:null,111:null}}_buildGeneration0(){if(this.randomizeGen0){const t=Array(this.width).fill(0);for(let e=0;e<t.length;e++)t[e]=Math.random()>.5?1:0;this.cells.push(t)}else{const t=Array(this.width).fill(0);t[Math.floor(this.width/2)]=1,this.cells.push(t)}}_convertRuleToBinary(){if(this.rule<0||this.rule>255||typeof this.rule!="number")throw new Error("value does not fit into a single byte");const t=this.rule.toString(2);this.ruleset=Array(8-t.length).fill(0).join("")+t,this._mapRuleset()}_mapRuleset(){Object.keys(this.ruleMap).forEach((t,e)=>{this.ruleMap[t]=parseInt(this.ruleset[e])})}_buildEca(){for(let t=0;t<this.generations;t++){const e=this.cells[t];this._validateSquares(e)}}_validateSquares(t){const e=[];for(let i=0;i<this.width;i++)if(i===0){const l=`${t[t.length-1]}${t[i]}${t[i+1]}`;e.push(this.ruleMap[l])}else if(i===t.length-1){const l=`${t[i-1]}${t[i]}${t[0]}`;e.push(this.ruleMap[l])}else{const l=`${t[i-1]}${t[i]}${t[i+1]}`;e.push(this.ruleMap[l])}this.cells.push(e)}_fillCanvas(t){for(let e=0;e<this.cells.length;e++)for(let i=0;i<this.cells[e].length;i++){let l;l=this.cells[e][i]===1?this.one_color:this.zero_color,t.fillStyle=l,t.fillRect(i*this.cell_size,e*this.cell_size,this.cell_size,this.cell_size)}}init(t){this._buildGeneration0(),this._convertRuleToBinary(),this._buildEca(),this._fillCanvas(t)}}let y;onmessage=a=>{if(typeof a.data=="object"){const t=a.data.canvas,e=JSON.parse(a.data.options);t.height=e.generations,t.width=e.width;const i=t.getContext("2d");if(console.log(e),a.data.type==="Elementary Cellular Automata")new f(e.rule,e.width,e.generations,e.randomize,e.zeroColor,e.oneColor,e.cellSize).init(i),postMessage({status:"completed"});else if(a.data.type==="Cellular Automata")new h(e.cellSize,e.zeroColor,e.oneColor,e.generations,e.width,e.lifeCycles).gameSetup(i,e.lifeCycles),postMessage({status:"completed",interval:y});else if(a.data.type==="Moore's Neighborhood"){const l=new c(e.cellSize,e.zeroColor,e.oneColor,e.generations,e.width,e.lifeCycles);l.gameSetup(i),l.runGame(i,e.lifeCycles),postMessage({status:"completed"})}else a.data.type==="Drunkard's Walk"&&(new n(e.cellSize,e.deadColor,e.livingColor,e.generations,e.width,e.steps,e.drunkards).init(i),postMessage({status:"completed"}))}else console.log("post to clear interval"),clearInterval(a.data)}})();
